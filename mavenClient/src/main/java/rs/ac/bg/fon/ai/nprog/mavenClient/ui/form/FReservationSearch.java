
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.ac.bg.fon.ai.nprog.mavenClient.ui.form;

import rs.ac.bg.fon.ai.nprog.mavenClient.controller.Controller;
import rs.ac.bg.fon.ai.nprog.mavenCommonLib.domain.Reservation;
import java.awt.Color;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;
import rs.ac.bg.fon.ai.nprog.mavenClient.ui.component.table.model.ReservationTableModel;

/**
 *
 * @author Ivona
 */
public class FReservationSearch extends javax.swing.JDialog {

    /**
     * Creates new form FReservationSearch
     */
    public FReservationSearch(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        prepareTable();
        try {
            fillForm();
        } catch (Exception ex) {
            Logger.getLogger(FReservationSearch.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jBtnSearchReservation = new javax.swing.JButton();
        jTxtMovieName = new javax.swing.JTextField();
        jTxtTime = new javax.swing.JTextField();
        jTxtNameLastname = new javax.swing.JTextField();
        jLblPonistiParametrePretrage = new javax.swing.JLabel();
        jComboDate = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jRadioButtonFuture = new javax.swing.JRadioButton();
        jRadioButtonPrevious = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableReservation = new javax.swing.JTable();
        jBtnDeleteReservation = new javax.swing.JButton();
        jBtnDetails = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pretraga rezervacija");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pretraga rezervacije", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 0, 102))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("Naziv filma:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 102));
        jLabel2.setText("Datum:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 102));
        jLabel3.setText("Vreme:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 102));
        jLabel4.setText("Ime i prezime:");

        jBtnSearchReservation.setBackground(new java.awt.Color(0, 0, 102));
        jBtnSearchReservation.setForeground(new java.awt.Color(255, 255, 255));
        jBtnSearchReservation.setText("Pretraga");
        jBtnSearchReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSearchReservationActionPerformed(evt);
            }
        });

        jTxtMovieName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTxtMovieName.setForeground(new java.awt.Color(0, 0, 102));

        jTxtTime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTxtTime.setForeground(new java.awt.Color(0, 0, 102));

        jTxtNameLastname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTxtNameLastname.setForeground(new java.awt.Color(0, 0, 102));

        jLblPonistiParametrePretrage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLblPonistiParametrePretrage.setForeground(new java.awt.Color(153, 0, 0));
        jLblPonistiParametrePretrage.setText("X Ponisti parametre pretraga");
        jLblPonistiParametrePretrage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLblPonistiParametrePretrageMouseClicked(evt);
            }
        });
        jLblPonistiParametrePretrage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLblPonistiParametrePretrageKeyPressed(evt);
            }
        });

        jComboDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboDate.setForeground(new java.awt.Color(0, 0, 102));

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        buttonGroup1.add(jRadioButtonFuture);
        jRadioButtonFuture.setText("Buduce");

        buttonGroup1.add(jRadioButtonPrevious);
        jRadioButtonPrevious.setText("Prosle");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonFuture)
                    .addComponent(jRadioButtonPrevious))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jRadioButtonFuture)
                .addGap(9, 9, 9)
                .addComponent(jRadioButtonPrevious)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTxtNameLastname, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboDate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jLblPonistiParametrePretrage))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jBtnSearchReservation)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTxtMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTxtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTxtNameLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jBtnSearchReservation)
                .addGap(18, 18, 18)
                .addComponent(jLblPonistiParametrePretrage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rezervacije:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 0, 102))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(0, 0, 102));

        jTableReservation.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTableReservation.setForeground(new java.awt.Color(0, 0, 102));
        jTableReservation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableReservation.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableReservation);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(212, 212, 212))
        );

        jBtnDeleteReservation.setBackground(new java.awt.Color(0, 0, 102));
        jBtnDeleteReservation.setForeground(new java.awt.Color(255, 255, 255));
        jBtnDeleteReservation.setText("Obriši");
        jBtnDeleteReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDeleteReservationActionPerformed(evt);
            }
        });

        jBtnDetails.setBackground(new java.awt.Color(0, 0, 102));
        jBtnDetails.setForeground(new java.awt.Color(255, 255, 255));
        jBtnDetails.setText("Detalji");
        jBtnDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addComponent(jBtnDeleteReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(213, 213, 213))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnDetails)
                    .addComponent(jBtnDeleteReservation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void jBtnSearchReservationActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        ArrayList<String> columns = new ArrayList<>();
        ArrayList<String> values = new ArrayList<>();
        if (buttonGroup1.isSelected(jRadioButtonFuture.getModel())) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            values.add(sdf.format(new Date()));
            columns.add("Date>");
            jBtnDeleteReservation.setEnabled(true);
        } else if (buttonGroup1.isSelected(jRadioButtonPrevious.getModel())) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            values.add(sdf.format(new Date()));
            columns.add("Date<");
            jBtnDeleteReservation.setEnabled(false);
        }
        if (!jTxtMovieName.getText().equals("")) {
            columns.add("m.Name");
            values.add(jTxtMovieName.getText());
        }
        if (jComboDate.getSelectedIndex() != -1) {
            values.add((String) jComboDate.getSelectedItem());
            columns.add("Date");
        }
        if (!jTxtTime.getText().equals("")) {
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
            Date time;
            try {
                time = sdf.parse(jTxtTime.getText().trim());
                values.add(sdf.format(time));
                columns.add("Time");

            } catch (ParseException ex) {
                Logger.getLogger(FReservationSearch.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (!jTxtNameLastname.getText().equals("")) {
            columns.add("nameLastname");
            values.add(jTxtNameLastname.getText());
        }
        if (columns.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Unesite parametar pretrage.");
            return;
        }
        try {
            controller.Controller.getInstance().getReservationsWithCriteria(columns, values, this);

        } catch (Exception ex) {
            Logger.getLogger(FReservationSearch.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                                     

    private void jLblPonistiParametrePretrageKeyPressed(java.awt.event.KeyEvent evt) {                                                        
    }                                                       

    private void jLblPonistiParametrePretrageMouseClicked(java.awt.event.MouseEvent evt) {                                                          
        jComboDate.setSelectedIndex(-1);
        jTxtMovieName.setText("");
        jTxtNameLastname.setText("");
        jTxtTime.setText("");
        buttonGroup1.clearSelection();
        jBtnDeleteReservation.setEnabled(true);

        try {
            Controller.getInstance().getAllReservations(this);
        } catch (Exception ex) {
            Logger.getLogger(FReservationSearch.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                                         

    private void jBtnDeleteReservationActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
        if (jTableReservation.getSelectedRow() != -1) {
            int ok = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da želite da obrišete rezervaciju?");//0 yes 1 no 2 cancel
            if (ok != 0) {
                return;
            }
            ReservationTableModel rtm = (ReservationTableModel) jTableReservation.getModel();
            Reservation reservation = rtm.getReservation(jTableReservation.getSelectedRow());
            try {
                controller.Controller.getInstance().removeReservation(reservation, this);
            } catch (Exception ex) {
                Logger.getLogger(FReservationSearch.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Odaberite rezervaciju koju zelite da obrisete.");
        }
    }                                                     

    private void jBtnDetailsActionPerformed(java.awt.event.ActionEvent evt) {                                            
        if (jTableReservation.getSelectedRow() != -1) {
            ReservationTableModel rtm = (ReservationTableModel) jTableReservation.getModel();
            Reservation reservation = rtm.getReservation(jTableReservation.getSelectedRow());
            FReservation fReservation = new FReservation(null, true, FormMode.FORM_VIEW, reservation.getReservationId());
            fReservation.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Odaberite rezervaciju koju zelite da prikazete.");
        }
    }                                           

    // Variables declaration - do not modify                     
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBtnDeleteReservation;
    private javax.swing.JButton jBtnDetails;
    private javax.swing.JButton jBtnSearchReservation;
    private javax.swing.JComboBox<String> jComboDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLblPonistiParametrePretrage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButtonFuture;
    private javax.swing.JRadioButton jRadioButtonPrevious;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableReservation;
    private javax.swing.JTextField jTxtMovieName;
    private javax.swing.JTextField jTxtNameLastname;
    private javax.swing.JTextField jTxtTime;
    // End of variables declaration                   

    private void fillForm() throws Exception {
        Controller.getInstance().getAllReservations(this);
        fillComboDate();
    }

    private void fillComboDate() {
        jComboDate.removeAllItems();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(new Date());
        jComboDate.addItem(sdf.format(calendar.getTime()));
        for (int i = 0; i < 10; i++) {
            calendar.add(Calendar.DAY_OF_MONTH, 1);
            jComboDate.addItem(sdf.format(calendar.getTime()));
        }
        jComboDate.setSelectedIndex(-1);
    }

    public void fillTableReservation(List<Reservation> reservations) throws Exception {
        if (reservations.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da nađe rezervaciju po zadatoj vrednosti.");
            buttonGroup1.clearSelection();
            return;
        }
        JOptionPane.showMessageDialog(this, "Pretraga je završena!");

        ReservationTableModel rtm = new ReservationTableModel(reservations);
        jTableReservation.setModel(rtm);
        jTableReservation.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTableReservation.getColumnModel().getColumn(1).setPreferredWidth(180);
        jTableReservation.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTableReservation.getColumnModel().getColumn(3).setPreferredWidth(150);
        jTableReservation.getColumnModel().getColumn(4).setPreferredWidth(100);
    }

    public void reservationLoadingFailed() {
        JOptionPane.showMessageDialog(this, "Učitavanje rezervacija nije uspelo.");
    }

    public void reservationIsDeleted() {
        JOptionPane.showMessageDialog(this, "Sistem je obrisao rezervaciju.");
        dispose();
    }

    public void reservationIsNotDeleted() {
        JOptionPane.showMessageDialog(this, "Sistem ne može da obriše rezervaciju.");
    }

    private void prepareTable() {
        JTableHeader header = jTableReservation.getTableHeader();
        header.setFont(new Font("Tahoma", Font.PLAIN, 16));
        header.setForeground(Color.decode("#12207B"));
        header.setBackground(Color.decode("#C0E2F0"));
    }
}
